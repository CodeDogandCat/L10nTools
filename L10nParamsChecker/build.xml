<?xml version="1.0" encoding="UTF-8"?>
<!--project 用于定义一个ant工程，其中的三项name、default、basedir缺一不可。
作用分别为：定义工程名、制定默认执行的任务、以及工程基础的路径型(它是计算其它路径的基础，一般情况下使用.即在java工程根目录即可)-->
<project name="L10nParamsChecker" default="local-zip" basedir=".">
	<!--描述，个人觉得就是一提示作用，没什么实际用途-->
	<description>use jar test</description>
	<!--定义源文件路径，其中的value换成location也行，使用value的时候，${src}得到的就是src这个值，如果使用location，得到的是src这个目录的绝对路径-->
	<property name="src" value="src" />
	<property name="classes" value="bin/classes" />

	<!--创建任务init，负责初始化一些条件-->
	<target name="init">
		<!-- 创建存放编译后的class的目录
			mkdir可以创建多级目录 
		-->
		<mkdir dir="${classes}" />
	</target>

	<!--创建编译任务，名字是compile,depends指定了comiple任务依赖init任务-->
	<target name="compile" depends="init" description="comile target">
		<!--javac，编译，对应java中的javac命令。
		其中srcdir定义源文件路径 destdir定义编译后文件路径，
		includeantruntime作用是指定编译任务是否包含ant的classpath,可有可无，不影响编译，
		但不写可能会出现警告，为了眼不见心不烦，加上吧-->
		<javac srcdir="${src}" destdir="${classes}" includeantruntime="true" encoding="UTF-8">
		
		</javac>
	</target>


	<!-- 创建时间戳 -->
    <tstamp />  

	<!--定义jarfilename，准备进行打包操作。其中ant.project.name是ant默认的一个变量，值为最上面定义的project的name
	${DSTAMP}为日期，格式为20111123；${TSTAMP}为时间，格式为2256，表示22点56分。
		-->
	<property name="jarfilename" value="${ant.project.name}.jar" />
	<!--打包开始，名字为jar，依赖任务为compile-->
	<target name="jar" depends="compile" description="make jar file">
		<!--jar操作，jarfile指定jar包存放路径，basedir为编译后的class的目录-->
		<jar jarfile="test/run/${jarfilename}" basedir="${classes}">
			<!--为jar包指定manifest，当然，如果jar包不需要打成runnable的形式，manifest可以不要-->
			<manifest>
				<!--指定main-class-->
				<attribute name="Main-Class" value="us.zoom.tools.l10n.core.Index" />
				
			</manifest>
		</jar>
	</target>
	<target name="local-zip" depends="jar">
	     
		
        <zip destfile="bin/${ant.project.name}-${DSTAMP}.zip">
            <zipfileset dir="test/run/"/>
        </zip>
		
		<delete>
			<fileset dir="test/run/">
			    <include name="${ant.project.name}.jar"/>
			</fileset>
		</delete>
	
	</target>
	<!-- 清理 -->
	<target name="clean" >
		<!-- 可以以递归的方式删除目录 -->
		
	    <delete dir="${classes}" />
		<delete dir="." includes="${ant.project.name}*.jar" />
	</target>
</project>
